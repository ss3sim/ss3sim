% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_boxplot.R
\name{plot_boxplot}
\alias{plot_boxplot}
\title{Plot results of a simulation as boxplots}
\usage{
plot_boxplot(
  data,
  x,
  y,
  horiz = NULL,
  horiz2 = NULL,
  vert = NULL,
  vert2 = NULL,
  relative.error = FALSE,
  axes.free = TRUE,
  print = TRUE,
  fill = NA
)
}
\arguments{
\item{data}{A valid data frame containing \code{scalar} or \code{timeseries} values
from a \pkg{ss3sim} simulation. That data are generated from
\code{\link{get_results_all}}.}

\item{x}{A character string denoting which column to use as the x variable.
For time-series data, setting \code{x = "year"} leads to a time-series plot.}

\item{y}{A character string denoting which column to use as the y
variable. Must be a numeric column.}

\item{horiz, horiz2}{A character string denoting which column to use as
the first (\code{horiz}) and second (\code{horiz2}) level of faceting in
the horizontal direction. E.g., "M" or "species". A value of NULL (default)
indicates no faceting in the horizontal space.}

\item{vert, vert2}{A character string denoting which column to use as
the first (\code{vert}) and second (\code{vert2}) level of faceting in
the vertical direction. E.g., "M" or "species". A value of NULL (default)
indicates no faceting in the vertical space.}

\item{relative.error}{Boolean for whether the y-axis scale should be
interpreted as relative error. If \code{TRUE}, \code{ylim} is set to
\code{c(-1, 1)}, the y-axis label is changed automatically, and a
black, dashed line at \code{y=0} is added. The argument can also accept a
color entry if you wish the line to be something other than black. E.g.,
\code{"red"} will add a red dashed line at zero as well as fix the y-axis
limits.}

\item{axes.free}{Boolean for whether the y-axis scales should be free
in \code{facet_grid}.}

\item{print}{A logical for whether the plot is printed or not.}

\item{fill}{A character string that represents a single color that will
be used to fill the boxplots. The default value of \code{NA} leads to
unfilled boxplots.}
}
\description{
Generate boxplots using \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} to visualize
outliers and central tendencies.
}
\details{
Median, hinges, and whiskers as well as outliers are displayed to
summarize the data. The lower and upper hinges are the first and third
quantiles (i.e., 25\% and 75\% percentiles). The upper and lower
whiskers are 1.5*inner-quartile range, i.e., the distance between the first
and third quartile values.
Outliers are those points that lie beyond the whiskers.
These explanations are detailed in \code{\link[ggplot2:geom_boxplot]{ggplot2::geom_boxplot()}}.

Values of \code{NA} are removed prior to plotting such that the typical
error message from \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} is not printed to the screen.

The \pkg{ss3sim} plotting functions are simply
wrappers for \pkg{ggplot2} code, specific to the output from
\pkg{ss3sim} \code{get_results_all()} objects. They are
designed to quickly explore simulation output, rather than produce
publication-level figures. The functions use arguments passed as
characters that refer to columns of \code{data}.
Scalar plots requires a value for \code{x}; while,
for time-series plots, \code{x = "year"} will be necessary.

Note that there are some subtle differences between the
functions.
Boxplots cannot have a color mapped to them like points or lines,
and thus, \code{color} is not a
valid argument. The time-series point and line plots are grouped internally by
'ID', which is a combination of scenario and iteration and will be
automatically added to the data set if not already present.
}
\section{Output}{
 These functions print the \code{ggplot} object, but
also return it invisibly for saving or printing again later.
For example, you could save the \code{ggplot} object and add a custom
theme or change an axis label before printing it.
}

\examples{
# Plot scalar values
data("scalar_dat", package = "ss3sim")
re <- calculate_re(scalar_dat)
\dontrun{
plot_boxplot(re,
  x = "E", y = "depletion_re", horiz = "D",
  relative.error = TRUE
)
}
rm(re)
# Merge scalar and time-series values to plot time series with color
# Be patient, the time-series boxplots take some time.
data("ts_dat", package = "ss3sim")
ts_dat[, "model_run"] <- factor(ts_dat[, "model_run"],
  levels = c("om", "em")
)
\dontrun{
plot_boxplot(ts_dat,
  x = "year", y = "SpawnBio",
  horiz = "scenario", vert = "model_run"
)
}

}
\author{
Cole C. Monnahan
}
