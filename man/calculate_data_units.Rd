% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/change_data.r
\name{calculate_data_units}
\alias{calculate_data_units}
\title{Calculate fleets, years, and data types needed given sampling parameters}
\usage{
calculate_data_units(
  index_params = NULL,
  lcomp_params = NULL,
  agecomp_params = NULL,
  calcomp_params = NULL,
  mlacomp_params = NULL,
  wtatage_params = NULL
)
}
\arguments{
\item{index_params}{Named lists containing the arguments for
\code{\link[=sample_index]{sample_index()}}.}

\item{lcomp_params}{Named lists containing the arguments for
\code{\link[=sample_lcomp]{sample_lcomp()}}.}

\item{agecomp_params}{Named lists containing the arguments for
\code{\link[=sample_agecomp]{sample_agecomp()}}.}

\item{calcomp_params}{Named lists containing the arguments for
\code{\link[=sample_calcomp]{sample_calcomp()}}.}

\item{mlacomp_params}{Named lists containing the arguments for
\code{\link[=sample_mlacomp]{sample_mlacomp()}}.}

\item{wtatage_params}{Named lists containing the arguments for
\code{\link[=sample_wtatage]{sample_wtatage()}}.}
}
\value{
A list with the following three elements:
\itemize{
\item fleets,
\item years, and
\item types.
}
}
\description{
Given the sampling arguments that are specified in \code{..._params}, e.g.,
\code{index_params}, calculate the super set of fleets, years, and data
types that will be needed in the data file of expected values that is
generated by the OM.
}
\note{
A superset by nature is larger than the individual sets used to
create it (unless all sampling arguments are identical), so that the
returned list will created some unnecessary combinations. This was done
intentionally for simplicity but may be changed later.
}
\examples{
## Only one fleet
calculate_data_units(lcomp_params = list(fleets = 1, years = c(3, 4, 6)))
## Add new fleet
morefleets <- calculate_data_units(
  lcomp_params = list(fleets = 1, years = c(3, 4, 6)),
  agecomp_params = list(fleets = 2, years = 5)
)
\dontshow{
testthat::expect_equal(morefleets[["years"]], 3:6)
}
## Add length or age if missing and conditional-age-at-length is included
test <- mapply(calculate_data_units,
  SIMPLIFY = FALSE,
  lcomp_params = list(NULL, list(fleets = 1, years = 1:10)),
  agecomp_params = list(NULL, NULL),
  MoreArgs = list(calcomp_params = list(fleets = 1, years = 1:10))
)
\dontshow{
testthat::expect_equal(sort(test[[1]][["types"]]), c("age", "cal", "len"))
testthat::expect_equal(sort(test[[2]][["types"]]), c("age", "cal", "len"))
}
rm(test)
}
\seealso{
See further examples in \link{clean_data} and \link{change_data}
}
\author{
Cole Monnahan
}
