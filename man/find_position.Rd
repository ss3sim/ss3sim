% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_position.R
\name{find_position}
\alias{find_position}
\title{Find integer reference to fleet names}
\usage{
find_position(x, table)
}
\arguments{
\item{x}{A vector of strings and/or integers to be matched.}

\item{table}{A vector of strings. If the character strings includes
values that can be coerced to integers, they must be in a matching position
in the vector. For example, \code{table = c("3","4","1")} will confuse the
function because \code{x = 1} will produce a return value of 3 rather than 1.}
}
\value{
An integer vector indicating the positions of \code{x} in \code{table}.
Same as \code{\link[=match]{match()}}, if \code{x[i]} is found to be equal to \code{table[j]}, then
the value returned in the \code{ith} position of the integer vector is \code{j}.
The smallest value of \code{j}, i.e., the first match, is always returned.

\code{find_position()} differs from \code{\link[=match]{match()}} in three ways.
First, values of \code{x} that are not found are removed. Thus, the length of
the integer vector has the potential to be shorter than the length of \code{x}.
Second, \code{x} can contain a mix of integer positions that are already known
and strings to be found.
Third, \code{table} cannot include integers that do not match their position.
See the specifications for \code{table} for more details.
}
\description{
Find the position of each desired value, i.e., \code{x},
in a vector of strings.
Builds on \code{\link[=match]{match()}} by allowing \code{x} to be a combination of
strings to be matched and known positions.
}
\examples{
# Standard use
find_position(c("sad", 1), c("happy", "sad"))
# Incorrect use
find_position(c("sad", 2), c("happy", "sad", "2"))
}
\seealso{
See \code{\link[=match]{match()}} for a more formal version of \code{find_position()}
that returns an integer vector the same length as \code{x}.
}
\author{
Kelli F. Johnson
}
