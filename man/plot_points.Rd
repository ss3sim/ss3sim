% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_points.R
\name{plot_points}
\alias{plot_points}
\title{Plot results of a simulation as a scatterplot}
\usage{
plot_points(
  data,
  x,
  y,
  horiz = NULL,
  horiz2 = NULL,
  vert = NULL,
  vert2 = NULL,
  jitter.height = 0,
  jitter.width = 0,
  color = NULL,
  relative.error = FALSE,
  axes.free = TRUE,
  print = TRUE
)
}
\arguments{
\item{data}{A valid data frame containing \code{scalar} or \code{timeseries} values
from a \pkg{ss3sim} simulation. That data are generated from
\code{\link{get_results_all}}.}

\item{x}{A character string denoting which column to use as the x variable.
For time-series data, setting \code{x = "year"} leads to a time-series plot.}

\item{y}{A character string denoting which column to use as the y
variable. Must be a numeric column.}

\item{horiz, horiz2}{A character string denoting which column to use as
the first (\code{horiz}) and second (\code{horiz2}) level of faceting in
the horizontal direction. E.g., "M" or "species". A value of NULL (default)
indicates no faceting in the horizontal space.}

\item{vert, vert2}{A character string denoting which column to use as
the first (\code{vert}) and second (\code{vert2}) level of faceting in
the vertical direction. E.g., "M" or "species". A value of NULL (default)
indicates no faceting in the vertical space.}

\item{jitter.height, jitter.width}{Parameters for
\code{\link[ggplot2:position_jitter]{ggplot2::position_jitter()}} that specify the vertical and horizontal
spread added to points. Where, added values are both positive and negative,
so the total spread is twice the value specified here.
If \code{NULL}, the spread will be 40\% of the resolution of the data;
this means the jitter values will occupy 80\% of the implied bins.
Categorical data is aligned on the integers,
so a width or height of 0.5 will spread the data so it's not possible
to see the distinction between the categories.
The default within ss3sim is to not jitter, i.e., a spread of 0.0.}

\item{color}{A character string denoting which column to use to map
color. Not valid for boxplot functions. Useful for looking at EM
performance criteria against other dimensions of the EM or OM. See
example below for how to merge in a metric from a scalar dataset to a ts
dataset.}

\item{relative.error}{Boolean for whether the y-axis scale should be
interpreted as relative error. If \code{TRUE}, \code{ylim} is set to
\code{c(-1, 1)}, the y-axis label is changed automatically, and a
black, dashed line at \code{y=0} is added. The argument can also accept a
color entry if you wish the line to be something other than black. E.g.,
\code{"red"} will add a red dashed line at zero as well as fix the y-axis
limits.}

\item{axes.free}{Boolean for whether the y-axis scales should be free
in \code{facet_grid}.}

\item{print}{A logical for whether the plot is printed or not.}
}
\description{
Generate a scatter plot using \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} to visualize
the relationship between two continuous variables.
}
\details{
Points are placed on the figure using the width setting in
\code{\link[ggplot2:position_jitter]{ggplot2::position_jitter()}} that defaults to 40\% resolution of
the data, meaning that the jitter values will occupy 80\% of the implied bins.
The previous information was found in the documentation for
\code{\link[ggplot2:position_jitter]{ggplot2::position_jitter()}}.

Values of \code{NA} are removed prior to plotting such that the typical
error message from \pkg{ggplot2} is not printed to the screen.

The \pkg{ss3sim} plotting functions are simply
wrappers for \pkg{ggplot2} code, specific to the output from
\pkg{ss3sim} \code{get_results_all()} objects. They are
designed to quickly explore simulation output, rather than produce
publication-level figures. The functions use arguments passed as
characters that refer to columns of \code{data}.
Scalar plots requires a value for \code{x}; while,
for time-series plots, \code{x = "year"} will be necessary.

Note that there are some subtle differences between the
functions.
Boxplots cannot have a color mapped to them like points or lines,
and thus, \code{color} is not a
valid argument. The time-series point and line plots are grouped internally by
'ID', which is a combination of scenario and iteration and will be
automatically added to the data set if not already present.
}
\section{Output}{
 These functions print the \code{ggplot} object, but
also return it invisibly for saving or printing again later.
For example, you could save the \code{ggplot} object and add a custom
theme or change an axis label before printing it.
}

\examples{
# Plot scalar values
data("scalar_dat", package = "ss3sim")
re <- calculate_re(scalar_dat)
\dontrun{
plot_points(re,
  x = "E", y = "depletion_re", horiz = "D",
  color = "max_grad", relative.error = TRUE
)
}
rm(re)
# Merge scalar and time-series values to plot time series with color
data("ts_dat", package = "ss3sim")
re <- merge(
  by = "ID",
  calculate_re(ts_dat, add = FALSE),
  calculate_re(scalar_dat, add = FALSE)[, c("ID", "max_grad")]
)
\dontrun{
plot_points(re,
  x = "year", y = "SpawnBio_re",
  horiz = "scenario", color = "max_grad", relative.error = TRUE
)
}
rm(re)
}
\author{
Cole C. Monnahan
}
